buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven {
			url = 'https://repo.spongepowered.org/repository/maven-public/'
			content { includeGroup "org.spongepowered" }
		}
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

archivesBaseName = "${rootProject.name}-forge-${project.minecraft_version}"

mixin {
	//Tell mixingradle what filename the refmap should use
	add sourceSets.main, "${rootProject.name}.refmap.json"
	
	//Tell mixingradle which mixin configs exist
	config "${rootProject.name}.xplat.mixins.json"
	//config "${rootProject.name}.forge.mixins.json" //atm don't need any forge specific mixins
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.forge_version}"
	annotationProcessor "org.spongepowered:mixin:0.8.5:processor" //todo does mixin gradle do this? maybe
	
	compileOnly project(":Xplat")
}

//fold in xplat resources and sources
processResources { from project(":Xplat").sourceSets.main.resources }
tasks.withType(JavaCompile) { source(project(":Xplat").sourceSets.main.allSource) }

minecraft {
	mappings channel: 'official', version: project.minecraft_version //official mappings epic moments
	
	runs {
		client {
			taskName 'Client'
			workingDirectory project.file('run')
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				"${rootProject.name}" {
					source sourceSets.main
					source project(":Xplat").sourceSets.main
				}
			}
		}
		
		server {
			taskName 'Server'
			workingDirectory project.file('run')
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				"${rootProject.name}" {
					source sourceSets.main
					source project(":Xplat").sourceSets.main
				}
			}
		}
	}
}

jar {
	finalizedBy 'reobfJar'
}